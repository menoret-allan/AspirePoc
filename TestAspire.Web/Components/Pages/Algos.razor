@page "/algos"
@using TestAspire.Web.Api
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@rendermode InteractiveServer

@inject AlgoClient AlgoApi

<PageTitle>Algos</PageTitle>

<h1>Algos</h1>

<p>This component allow fetch algos which are available in the backend.</p>

<button name="testing" id="testing" class="btn btn-primary" @onclick="ResetId">Delete</button>


@if (algos == null)
{
    <p><em>Page is loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Version</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var algo in algos)
            {
                <tr>
                    <td>@algo.name</td>
                    <td>@algo.version</td>
                    <td>
                        <button class="btn btn-primary" onclick="@(() => Delete(algo.id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Algo[]? algos;

    public void ResetId()
    {
        Console.WriteLine("hey");
    }

    private void Delete(int id)
    {
        Task.Run(async () =>
            {
                await AlgoApi.DeleteAsync(id);

                algos = await AlgoApi.GetAlgosAsync();
            }
        );
    }

    protected override async Task OnInitializedAsync()
    {
        algos = await AlgoApi.GetAlgosAsync();
    }
}
