// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestAspire.ApiService.Entities;

#nullable disable

namespace TestAspire.ApiService.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250515113142_CreateNewFieldImageBytes")]
    partial class CreateNewFieldImageBytes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestAspire.ApiService.Entities.Algo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAlive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Algos");
                });

            modelBuilder.Entity("TestAspire.ApiService.Entities.Dataset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Datasets");
                });

            modelBuilder.Entity("TestAspire.ApiService.Entities.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlgoId")
                        .HasColumnType("integer");

                    b.Property<int>("DatasetId")
                        .HasColumnType("integer");

                    b.Property<string>("ResultJson")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlgoId");

                    b.HasIndex("DatasetId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("TestAspire.ApiService.Entities.Result", b =>
                {
                    b.HasOne("TestAspire.ApiService.Entities.Algo", "Algo")
                        .WithMany("Results")
                        .HasForeignKey("AlgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestAspire.ApiService.Entities.Dataset", "Dataset")
                        .WithMany("Results")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Algo");

                    b.Navigation("Dataset");
                });

            modelBuilder.Entity("TestAspire.ApiService.Entities.Algo", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("TestAspire.ApiService.Entities.Dataset", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
